-- CREATE DATABASE School_System;
-- USE School_System; 


-- CREATE TABLE Schools (
-- 	id INT PRIMARY KEY AUTO_INCREMENT, 
-- 	name VARCHAR(30), 
-- 	mission VARCHAR(120), 
-- 	vision VARCHAR(120), 
-- 	language VARCHAR(20), 
-- 	general_info VARCHAR(120), 
-- 	fees INT, 
-- 	type VARCHAR(20), 
-- 	min_grade INT, 
-- 	max_grade INT, 
-- 	email VARCHAR(50), 
-- 	elementary BIT AS (min_grade = 1 AND max_grade >= 6) , 
-- 	middle BIT AS (min_grade <= 7 AND max_grade >= 9), 
-- 	high BIT AS (min_grade <= 10 AND max_grade = 12)
-- );  


-- CREATE TABLE Phone_Schools (
-- 	PRIMARY KEY (school_id, phone),
-- 	phone VARCHAR(15), 
-- 	school_id INT,
-- 	FOREIGN KEY (school_id) REFERENCES Schools(id) ON DELETE CASCADE 
	
-- ); 

-- CREATE TABLE Supplies (
-- 	PRIMARY KEY (name, school_id, grade),
-- 	name VARCHAR(15), 
-- 	school_id INT, 
-- 	grade INT,
-- 	FOREIGN KEY (school_id) REFERENCES Schools(id) ON DELETE CASCADE
-- ); 


-- CREATE TABLE Clubs (
-- 	PRIMARY KEY (name, school_id), 
-- 	name VARCHAR(20), 
-- 	school_id INT,
-- 	FOREIGN KEY (school_id) REFERENCES Schools(id) ON DELETE CASCADE
-- ); 

-- CREATE TABLE Students (
-- 	PRIMARY KEY (ssn), 
-- 	ssn INT, 
-- 	school_id INT, 
-- 	first_name VARCHAR(20),
-- 	last_name VARCHAR(20), 
-- 	username VARCHAR(20),
-- 	password VARCHAR(20), 
-- 	gender VARCHAR(10), 
-- 	birthdate date, 
-- 	age INT AS (YEAR('2016-1-1') - YEAR(birthdate)), 
-- 	grade INT, 
-- 	level VARCHAR(15), 
-- 	FOREIGN KEY (school_id) REFERENCES Schools(id)
-- ); 

-- CREATE TABLE Parents (
-- 	PRIMARY KEY (username), 
-- 	username VARCHAR(20), 
-- 	first_name VARCHAR(20), 
-- 	last_name VARCHAR(20), 
-- 	email VARCHAR(20), 
-- 	address VARCHAR(120), 
-- 	home_phone VARCHAR(15)
-- ); 

-- CREATE TABLE Mobiles_Of_Parents (
-- 	PRIMARY KEY (mobile, username), 
-- 	username VARCHAR(20), 
-- 	mobile VARCHAR(15), 
-- 	FOREIGN KEY (username) REFERENCES Parents(username) ON DELETE CASCADE
-- );  

-- CREATE TABLE Parents_Of_Students (
-- 	PRIMARY KEY (parent_username, child_ssn), 
-- 	parent_username VARCHAR(20), 
-- 	child_ssn INT, 
-- 	FOREIGN KEY (child_ssn) REFERENCES Students(ssn), 
-- 	FOREIGN KEY (parent_username) REFERENCES Parents(username)
-- ); 

-- CREATE TABLE Club_Member_Student (
-- 	PRIMARY KEY (student_ssn, school_id, club_name), 
-- 	student_ssn INT, 
-- 	school_id INT, 
-- 	club_name VARCHAR(20), 
-- 	FOREIGN KEY (club_name, school_id) REFERENCES Clubs(name, school_id) ON DELETE CASCADE, 
-- 	FOREIGN KEY (student_ssn) REFERENCES Students(ssn) ON DELETE CASCADE
-- );

-- CREATE TABLE Parent_Review_School (
-- 	PRIMARY KEY (school_id, parent_username), 
-- 	school_id INT, 
-- 	parent_username VARCHAR(20), 
-- 	review VARCHAR(200), 
-- 	FOREIGN KEY (school_id) REFERENCES Schools(id) ON DELETE CASCADE, 
-- 	FOREIGN KEY (parent_username) REFERENCES Parents(username) ON DELETE CASCADE 
-- ); 
-- CREATE TABLE School_Apply_Student(
--  	PRIMARY KEY (school_id, student_ssn), 
--  	school_id INT,
--  	student_ssn INT,
--  	parent_username VARCHAR(20), 
--  	FOREIGN KEY (school_id) REFERENCES Schools(id) ON DELETE CASCADE, 
--  	FOREIGN KEY (student_ssn) REFERENCES Students(ssn) ON DELETE CASCADE, 
--  	FOREIGN KEY (parent_username) REFERENCES Parents(username) ON DELETE SET NULL 
-- ); 

CREATE TABLE Employees (
	PRIMARY KEY(id), 
	id INT AUTO_INCREMENT, 
	school_id INT, 
	first_name VARCHAR(20), 
	middle_name VARCHAR(20), 
	last_name VARCHAR(20), 
	username VARCHAR(20), 
	password VARCHAR(20), 
	email VARCHAR(50), 
	gender VARCHAR(10), 
	address VARCHAR(40), 
	birthdate DATETIME, 
	salary INT, 
	start_date DATETIME, 
	age INT AS (YEAR('2016-1-1') - YEAR(birthdate)), 
	FOREIGN KEY (school_id) REFERENCES Schools(id) ON DELETE SET NULL
); 
