**DISCLAIMER: We've tried to stick to the description to the best of our abilities. This documentations explains our understanding and design decisions in detail. 
==> SYSTEM ADMINISTRATOR: 
* create_school: create school with all given attributes

* add_level_school: adding level to a certain school since level is a multi-values attribute

* add_school_phone: adding school to Phone_School since phone is multi-values attribute

* create_course: creates course

* add_course_prerequisite(pre_code, code): adds the course with code "pre_code" as prerequisite to the course with code "code"

* create_admin: adds school administrator to the database

* add_admin_to_school(admin_id, school_name): adds admin to specified school. 

N.B. The description is not clear on whether creating an admin and adding him/her to a school should be done in one procedure. So we decided to implement two separate procedures. 

* delete_school: deletes the record of the school from the Schools table, and sets the values of the usernames and passowrds of its students and employees to NULL. 

* search_school: The description is not very clear on this part. We decided to search for any school which maches the input name, type or address. 

* view_school_info: Selects all information about the school with the input id. 

* 

==> SCHOOL ADMINISTRATOR: 
*view_school(school_id): takes school id, selects all relevent information about school from the database

*view_applied_teacher(admin_id): takes the admin's id and shows all teachers whose IDs are null and are related to his/her school. We assume that when a teacher is first created, his/her username and password are set to null until verified by an admin. 

*verify_applied_teacher(teacher_id, username_in, password_in): used by an admin to manually assign a username and password to a teacher who has started working at his/her school. We update the start_date of a teacher only if it were originally null, meaning that this is his/her first job. 

* view_applied_students: selects all students who have applied to the admin's school

* verify_applied_student: assigns username and password to enrolled student and also assigns to him/her an ID that is unique within the school. 

*delete_employee(emp_id): we assume that the admin of a school has no authority to delete an employee from the database completely. He/she can only "delete" the employee from his/her school's system by setting their school_id, username and passwod to null. 

*delete_student(student_id): same as delete_employee

*edit_school_[column]: this group of procedures take the admin id and the new value of column they are defined to change and change them. 




==> TEACHER: 
*teacher_signup: 

*teacher_view_courses

*teacher_post_assignment



==> Parent: 

NEEDS TESTING--> parent_view_accepted
  